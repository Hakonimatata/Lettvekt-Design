# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='3-point-test-shell')
mdb.models['3-point-test-shell'].Material('Carbon/Epoxy(a)')
mdb.models['3-point-test-shell'].materials['Carbon/Epoxy(a)'].Density(table=((
    1.6e-09, ), ))
mdb.models['3-point-test-shell'].materials['Carbon/Epoxy(a)'].Elastic(table=((
    130000, 10000, 10000, 0.28, 0.28, 0.5, 4500, 4500, 3500), ), type=
    ENGINEERING_CONSTANTS)
mdb.models['3-point-test-shell'].Material('H100')
mdb.models['3-point-test-shell'].materials['H100'].Density(table=((1e-10, ), ))
mdb.models['3-point-test-shell'].materials['H100'].Elastic(table=((100, 100, 
    100, 0.3, 0.3, 0.3, 38.5, 38.5, 38.5), ), type=ENGINEERING_CONSTANTS)
mdb.models['3-point-test-shell'].HomogeneousSolidSection(material=
    'Carbon/Epoxy(a)', name='Carbon/Epoxy(a)', thickness=None)
mdb.models['3-point-test-shell'].HomogeneousSolidSection(material='H100', name=
    'H100', thickness=None)
mdb.models['3-point-test-shell'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3-point-test-shell'].sketches['__profile__'].rectangle(point1=(0.0, 
    0.0), point2=(220, 30))
mdb.models['3-point-test-shell'].Part(dimensionality=THREE_D, name='Specimen', 
    type=DEFORMABLE_BODY)
mdb.models['3-point-test-shell'].parts['Specimen'].BaseShell(sketch=
    mdb.models['3-point-test-shell'].sketches['__profile__'])
del mdb.models['3-point-test-shell'].sketches['__profile__']
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=15.0, principalPlane=XZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[2], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=10, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[4], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=110.0, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[6], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=210, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[8], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumCsysByDefault(
    coordSysType=CARTESIAN)
mdb.models['3-point-test-shell'].parts['Specimen'].CompositeLayup(elementType=
    SHELL, name='Layup1', offsetType=MIDDLE_SURFACE)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].Section(
    )
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].ReferenceOrientation(
    axis=AXIS_3, localCsys=
    mdb.models['3-point-test-shell'].parts['Specimen'].datums[10], 
    orientationType=SYSTEM)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='Carbon/Epoxy(a)', orientationType=SPECIFY_ORIENT, 
    orientationValue=0, plyName='Ply-1', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='H100', orientationType=SPECIFY_ORIENT, orientationValue=0, 
    plyName='Ply-2', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=4.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='H100', orientationType=SPECIFY_ORIENT, orientationValue=0, 
    plyName='Ply-3', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=4.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='Carbon/Epoxy(a)', orientationType=SPECIFY_ORIENT, 
    orientationValue=0, plyName='Ply-4', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].seedPart(deviationFactor=0.1
    , minSizeFactor=0.1, size=2)
mdb.models['3-point-test-shell'].parts['Specimen'].generateMesh()
mdb.models['3-point-test-shell'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['3-point-test-shell'].rootAssembly.Instance(dependent=ON, name=
    'Specimen', part=mdb.models['3-point-test-shell'].parts['Specimen'])
mdb.models['3-point-test-shell'].rootAssembly.translate(instanceList=(
    'Specimen', ), vector=(-110.0, -15.0, 0.0))
mdb.models['3-point-test-shell'].rootAssembly.Set(edges=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].edges.getSequenceFromMask(
    mask=('[#911 ]', ), ), name='EDGES-SUPPORT')
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-SUPPORT', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['EDGES-SUPPORT'], u3=
    SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(edges=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].edges.getSequenceFromMask(
    mask=('[#44 ]', ), ), name='EDGES-LOADING')
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-LOADING', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['EDGES-LOADING'], u3=
    SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(name='VERTICES-RB1', 
    vertices=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].vertices.getSequenceFromMask(
    mask=('[#28 ]', ), ))
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-RB1', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['VERTICES-RB1'], u1=SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(name='VERTICES-RB2', 
    vertices=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].vertices.getSequenceFromMask(
    mask=('[#4 ]', ), ))
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-RB2', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['VERTICES-RB2'], u2=SET)
mdb.models['3-point-test-shell'].StaticStep(initialInc=0.1, maxInc=0.1, name=
    'Step-1', nlgeom=ON, previous='Initial')
mdb.models['3-point-test-shell'].boundaryConditions['BC-LOADING'].setValuesInStep(
    stepName='Step-1', u3=-10)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='3-point-test-shell', modelPrint=
    OFF, multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE
    , numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.Model(modelType=STANDARD_EXPLICIT, name='SW1')
mdb.models['SW1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['SW1'].sketches['__profile__'].rectangle(point1=(-110.0, -15.0), 
    point2=(110.0, 15.0))
mdb.models['SW1'].Part(dimensionality=THREE_D, name='Beam', type=
    DEFORMABLE_BODY)
mdb.models['SW1'].parts['Beam'].BaseSolidExtrude(depth=10, sketch=
    mdb.models['SW1'].sketches['__profile__'])
del mdb.models['SW1'].sketches['__profile__']
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=
    -33.3333333333333, principalPlane=YZPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[2])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=
    33.3333333333333, principalPlane=YZPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[4])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=-100.0, 
    principalPlane=YZPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[6])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=100.0, 
    principalPlane=YZPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[8])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=0.0, 
    principalPlane=XZPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[10])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=1, 
    principalPlane=XYPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[12])
mdb.models['SW1'].parts['Beam'].DatumPlaneByPrincipalPlane(offset=9, 
    principalPlane=XYPLANE)
mdb.models['SW1'].parts['Beam'].PartitionCellByDatumPlane(cells=
    mdb.models['SW1'].parts['Beam'].cells, datumPlane=
    mdb.models['SW1'].parts['Beam'].datums[14])
mdb.models['SW1'].parts['Beam'].Set(cells=
    mdb.models['SW1'].parts['Beam'].cells.getSequenceFromMask(mask=(
    '[#2ff80000 ]', ), ), name='CELLS-BOT')
mdb.models['SW1'].parts['Beam'].Set(cells=
    mdb.models['SW1'].parts['Beam'].cells.getSequenceFromMask(mask=(
    '[#100001ff ]', ), ), name='CELLS-CORE')
mdb.models['SW1'].parts['Beam'].Set(cells=
    mdb.models['SW1'].parts['Beam'].cells.getSequenceFromMask(mask=(
    '[#7fe00 ]', ), ), name='CELLS-TOP')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#82ea8f6a #80291484 #816e8554 #9421402 #9c2054fd #2 ]', ), ), name=
    'EDGES-LONG')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#15157095 #12824120 #a913001 #a2284050 #35aa902 #1 ]', ), ), name=
    'EDGES-TRAN')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#68000000 #6d54aa5b #74004aaa #5495abad #60850200 ]', ), ), name=
    'EDGES-THIC')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:2 #54000000 #1085a2a9 #20840200 ]', ), ), name='EDGES-THIC-S1')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#40000000 #550a84b #20000a82 #100 ]', ), ), name='EDGES-THIC-CORE')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#28000000 #68040210 #4028 #44100804 #40010000 ]', ), ), name=
    'EDGES-THIC-S2')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:3 #10 #100000 ]', ), ), name='EDGES-SUPPORT-1')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:3 #4000 #1000000 ]', ), ), name='EDGES-SUPPORT-2')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:3 #80000000 #20000 ]', ), ), name='EDGES-LOADING-1')
mdb.models['SW1'].parts['Beam'].Set(edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:4 #8002 ]', ), ), name='EDGES-LOADING-2')
mdb.models['SW1'].parts['Beam'].Set(name='VERTICES-RBX-1', vertices=
    mdb.models['SW1'].parts['Beam'].vertices.getSequenceFromMask(mask=(
    '[#0 #20000 #80 ]', ), ))
mdb.models['SW1'].parts['Beam'].Set(name='VERTICES-RBY-1', vertices=
    mdb.models['SW1'].parts['Beam'].vertices.getSequenceFromMask(mask=(
    '[#0 #10000000 ]', ), ))
mdb.models['SW1'].parts['Beam'].Set(name='VERTICES-RBX-2', vertices=
    mdb.models['SW1'].parts['Beam'].vertices.getSequenceFromMask(mask=(
    '[#0 #48000000 ]', ), ))
mdb.models['SW1'].parts['Beam'].Set(name='VERTICES-RBY-2', vertices=
    mdb.models['SW1'].parts['Beam'].vertices.getSequenceFromMask(mask=(
    '[#0:2 #1 ]', ), ))
mdb.models['SW1'].Material(name='FiberComposite')
mdb.models['SW1'].materials['FiberComposite'].Elastic(table=((130000, 10000, 
    10000, 0.28, 0.28, 0.5, 4500, 4500, 3500), ), type=ENGINEERING_CONSTANTS)
mdb.models['SW1'].Material(name='Foam')
mdb.models['SW1'].Material(name='Foam')
mdb.models['SW1'].materials['Foam'].Elastic(table=((100, 100, 100, 0.3, 0.3, 
    0.3, 38.5, 38.5, 38.5), ), type=ENGINEERING_CONSTANTS)
mdb.models['SW1'].HomogeneousSolidSection(material='FiberComposite', name=
    'Section-Skin', thickness=None)
mdb.models['SW1'].HomogeneousSolidSection(material='Foam', name='Section-Foam', 
    thickness=None)
mdb.models['SW1'].parts['Beam'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-BOT'], sectionName=
    'Section-Skin', thicknessAssignment=FROM_SECTION)
mdb.models['SW1'].parts['Beam'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-TOP'], sectionName=
    'Section-Skin', thicknessAssignment=FROM_SECTION)
mdb.models['SW1'].parts['Beam'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-CORE'], sectionName=
    'Section-Foam', thicknessAssignment=FROM_SECTION)
mdb.models['SW1'].parts['Beam'].MaterialOrientation(additionalRotationField='', 
    additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_1, fieldName='', 
    localCsys=None, orientationType=SYSTEM, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-BOT'], stackDirection=STACK_3)
mdb.models['SW1'].parts['Beam'].MaterialOrientation(additionalRotationField='', 
    additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_1, fieldName='', 
    localCsys=None, orientationType=SYSTEM, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-TOP'], stackDirection=STACK_3)
mdb.models['SW1'].parts['Beam'].MaterialOrientation(additionalRotationField='', 
    additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_1, fieldName='', 
    localCsys=None, orientationType=SYSTEM, region=
    mdb.models['SW1'].parts['Beam'].sets['CELLS-CORE'], stackDirection=STACK_3)
mdb.models['SW1'].parts['Beam'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#82ea8f6a #80291484 #816e8554 #9421402 #9c2054fd #2 ]', ), ), size=2)
mdb.models['SW1'].parts['Beam'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#15157095 #12824120 #a913001 #a2284050 #35aa902 #1 ]', ), ), size=2)
mdb.models['SW1'].parts['Beam'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#0:2 #54000000 #1085a2a9 #20840200 ]', ), ), size=0.2)
mdb.models['SW1'].parts['Beam'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#28000000 #68040210 #4028 #44100804 #40010000 ]', ), ), size=0.2)
mdb.models['SW1'].parts['Beam'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['SW1'].parts['Beam'].edges.getSequenceFromMask(mask=(
    '[#40000000 #550a84b #20000a82 #100 ]', ), ), size=2)
mdb.models['SW1'].parts['Beam'].generateMesh()
mdb.models['SW1'].rootAssembly.Instance(dependent=ON, name='Beam', part=
    mdb.models['SW1'].parts['Beam'])
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-SUPPORT-1', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['EDGES-SUPPORT-1'], 
    u3=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-SUPPORT-2', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['EDGES-SUPPORT-2'], 
    u3=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-LOADING-1', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['EDGES-LOADING-1'], 
    u3=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-LOADING-2', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['EDGES-LOADING-2'], 
    u3=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-RBX-1', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['VERTICES-RBX-1'], 
    u1=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-RBY-1', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['VERTICES-RBY-1'], 
    u2=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-RBX-2', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['VERTICES-RBX-2'], 
    u1=SET)
mdb.models['SW1'].DisplacementBC(createStepName='Initial', name='BC-RBY-2', 
    region=
    mdb.models['SW1'].rootAssembly.instances['Beam'].sets['VERTICES-RBY-2'], 
    u2=SET)
mdb.models['SW1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['SW1'].boundaryConditions['BC-LOADING-1'].setValuesInStep(stepName=
    'Step-1', u3=-10)
mdb.models['SW1'].boundaryConditions['BC-LOADING-2'].setValuesInStep(stepName=
    'Step-1', u3=-10)
mdb.Job(model='SW1', name='SW1')
mdb.jobs['SW1'].submit(consistencyChecking=OFF)
mdb.Model(name='3-point-test-shell')
mdb.models['3-point-test-shell'].Material('Carbon/Epoxy(a)')
mdb.models['3-point-test-shell'].materials['Carbon/Epoxy(a)'].Density(table=((
    1.6e-09, ), ))
mdb.models['3-point-test-shell'].materials['Carbon/Epoxy(a)'].Elastic(table=((
    130000, 10000, 10000, 0.28, 0.28, 0.5, 4500, 4500, 3500), ), type=
    ENGINEERING_CONSTANTS)
mdb.models['3-point-test-shell'].Material('H100')
mdb.models['3-point-test-shell'].materials['H100'].Density(table=((1e-10, ), ))
mdb.models['3-point-test-shell'].materials['H100'].Elastic(table=((100, 100, 
    100, 0.3, 0.3, 0.3, 38.5, 38.5, 38.5), ), type=ENGINEERING_CONSTANTS)
mdb.models['3-point-test-shell'].HomogeneousSolidSection(material=
    'Carbon/Epoxy(a)', name='Carbon/Epoxy(a)', thickness=None)
mdb.models['3-point-test-shell'].HomogeneousSolidSection(material='H100', name=
    'H100', thickness=None)
mdb.models['3-point-test-shell'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3-point-test-shell'].sketches['__profile__'].rectangle(point1=(0.0, 
    0.0), point2=(220, 30))
mdb.models['3-point-test-shell'].Part(dimensionality=THREE_D, name='Specimen', 
    type=DEFORMABLE_BODY)
mdb.models['3-point-test-shell'].parts['Specimen'].BaseShell(sketch=
    mdb.models['3-point-test-shell'].sketches['__profile__'])
del mdb.models['3-point-test-shell'].sketches['__profile__']
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=15.0, principalPlane=XZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[2], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=10, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[4], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=110.0, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[6], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumPlaneByPrincipalPlane(
    offset=210, principalPlane=YZPLANE)
mdb.models['3-point-test-shell'].parts['Specimen'].PartitionFaceByDatumPlane(
    datumPlane=mdb.models['3-point-test-shell'].parts['Specimen'].datums[8], 
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces)
mdb.models['3-point-test-shell'].parts['Specimen'].DatumCsysByDefault(
    coordSysType=CARTESIAN)
mdb.models['3-point-test-shell'].parts['Specimen'].CompositeLayup(elementType=
    SHELL, name='Layup1', offsetType=MIDDLE_SURFACE)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].Section(
    )
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].ReferenceOrientation(
    axis=AXIS_3, localCsys=
    mdb.models['3-point-test-shell'].parts['Specimen'].datums[10], 
    orientationType=SYSTEM)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='Carbon/Epoxy(a)', orientationType=SPECIFY_ORIENT, 
    orientationValue=0, plyName='Ply-1', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='H100', orientationType=SPECIFY_ORIENT, orientationValue=0, 
    plyName='Ply-2', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=4.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='H100', orientationType=SPECIFY_ORIENT, orientationValue=0, 
    plyName='Ply-3', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=4.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].compositeLayups['Layup1'].CompositePly(
    material='Carbon/Epoxy(a)', orientationType=SPECIFY_ORIENT, 
    orientationValue=0, plyName='Ply-4', region=Region(
    faces=mdb.models['3-point-test-shell'].parts['Specimen'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )), suppressed=False, thickness=1.0, thicknessType=
    SPECIFY_THICKNESS)
mdb.models['3-point-test-shell'].parts['Specimen'].seedPart(deviationFactor=0.1
    , minSizeFactor=0.1, size=2)
mdb.models['3-point-test-shell'].parts['Specimen'].generateMesh()
mdb.models['3-point-test-shell'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['3-point-test-shell'].rootAssembly.Instance(dependent=ON, name=
    'Specimen', part=mdb.models['3-point-test-shell'].parts['Specimen'])
mdb.models['3-point-test-shell'].rootAssembly.translate(instanceList=(
    'Specimen', ), vector=(-110.0, -15.0, 0.0))
mdb.models['3-point-test-shell'].rootAssembly.Set(edges=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].edges.getSequenceFromMask(
    mask=('[#911 ]', ), ), name='EDGES-SUPPORT')
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-SUPPORT', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['EDGES-SUPPORT'], u3=
    SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(edges=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].edges.getSequenceFromMask(
    mask=('[#44 ]', ), ), name='EDGES-LOADING')
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-LOADING', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['EDGES-LOADING'], u3=
    SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(name='VERTICES-RB1', 
    vertices=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].vertices.getSequenceFromMask(
    mask=('[#28 ]', ), ))
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-RB1', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['VERTICES-RB1'], u1=SET)
mdb.models['3-point-test-shell'].rootAssembly.Set(name='VERTICES-RB2', 
    vertices=
    mdb.models['3-point-test-shell'].rootAssembly.instances['Specimen'].vertices.getSequenceFromMask(
    mask=('[#4 ]', ), ))
mdb.models['3-point-test-shell'].DisplacementBC(createStepName='Initial', name=
    'BC-RB2', region=
    mdb.models['3-point-test-shell'].rootAssembly.sets['VERTICES-RB2'], u2=SET)
mdb.models['3-point-test-shell'].StaticStep(initialInc=0.1, maxInc=0.1, name=
    'Step-1', nlgeom=ON, previous='Initial')
mdb.models['3-point-test-shell'].boundaryConditions['BC-LOADING'].setValuesInStep(
    stepName='Step-1', u3=-10)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='3-point-test-shell', modelPrint=
    OFF, multiprocessingMode=DEFAULT, name='Job-3', nodalOutputPrecision=SINGLE
    , numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-3'].submit(consistencyChecking=OFF)
