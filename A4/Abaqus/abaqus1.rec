# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-2')
mdb.models['BP-2'].Material('Carbon/Epoxy(a)')
mdb.models['BP-2'].materials['Carbon/Epoxy(a)'].Density(table=((1.6e-09, ), ))
mdb.models['BP-2'].materials['Carbon/Epoxy(a)'].Elastic(table=((130000, 10000, 
    10000, 0.28, 0.28, 0.5, 4500, 4500, 3500), ), type=ENGINEERING_CONSTANTS)
mdb.models['BP-2'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-2'].sketches['__profile__'].Line(point1=(-99.75, 37.25), point2=
    (99.75, 37.25))
mdb.models['BP-2'].sketches['__profile__'].Line(point1=(-89.75, 37.25), point2=
    (-59.75, -37.25))
mdb.models['BP-2'].sketches['__profile__'].Line(point1=(89.75, 37.25), point2=(
    59.75, -37.25))
mdb.models['BP-2'].sketches['__profile__'].Line(point1=(-59.75, -37.25), 
    point2=(59.75, -37.25))
mdb.models['BP-2'].sketches['__profile__'].Line(point1=(0.0, 37.25), point2=(
    0.0, -37.25))
mdb.models['BP-2'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-2'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-2'].sketches['__profile__'])
del mdb.models['BP-2'].sketches['__profile__']
mdb.models['BP-2'].parts['Box'].DatumPlaneByPrincipalPlane(offset=20.05, 
    principalPlane=YZPLANE)
mdb.models['BP-2'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-2'].parts['Box'].datums[2], faces=
    mdb.models['BP-2'].parts['Box'].faces)
mdb.models['BP-2'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-20.05, 
    principalPlane=YZPLANE)
mdb.models['BP-2'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-2'].parts['Box'].datums[4], faces=
    mdb.models['BP-2'].parts['Box'].faces)
mdb.models['BP-2'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1240.1, 
    principalPlane=XYPLANE)
mdb.models['BP-2'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-2'].parts['Box'].datums[6], faces=
    mdb.models['BP-2'].parts['Box'].faces)
mdb.models['BP-2'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1159.9, 
    principalPlane=XYPLANE)
mdb.models['BP-2'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-2'].parts['Box'].datums[8], faces=
    mdb.models['BP-2'].parts['Box'].faces)
mdb.models['BP-2'].Material(name='Alu')
mdb.models['BP-2'].materials['Alu'].Density(table=((2.7e-09, ), ))
mdb.models['BP-2'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-2'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.99255243356851, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['BP-2'].parts['Box'].Set(faces=mdb.models['BP-2'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-2'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-2'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-2'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-2'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-2'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=18)
mdb.models['BP-2'].parts['Box'].generateMesh()
mdb.models['BP-2'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-2'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-2'].parts['Box'])
mdb.models['BP-2'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-2'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-2'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-2'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-2'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-2'].rootAssembly.referencePoints[4], ))
mdb.models['BP-2'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-2'].rootAssembly.referencePoints[5], ))
mdb.models['BP-2'].rootAssembly.Set(edges=
    mdb.models['BP-2'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#800040 #200 #366550 ]', ), ), name='EDGES1')
mdb.models['BP-2'].rootAssembly.Set(edges=
    mdb.models['BP-2'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#0 #55292000 #c10003 ]', ), ), name='EDGES2')
mdb.models['BP-2'].MultipointConstraint(controlPoint=
    mdb.models['BP-2'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-2'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-2'].MultipointConstraint(controlPoint=
    mdb.models['BP-2'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-2'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-2'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-2'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-2'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-2'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-2'].BuckleStep(maxIterations=700, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-2'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-2'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-2'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-2'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-2'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-2'].rootAssembly.Set(faces=
    mdb.models['BP-2'].rootAssembly.instances['Box'].faces.getSequenceFromMask(
    mask=('[#280 ]', ), ), name='CONTACT-SURFACE')
mdb.models['BP-2'].rootAssembly.engineeringFeatures.NonstructuralMass(
    distribution=MASS_PROPORTIONAL, magnitude=0.05, name='Inertia-1', region=
    mdb.models['BP-2'].rootAssembly.sets['CONTACT-SURFACE'], units=TOTAL_MASS)
mdb.models['BP-2'].Gravity(comp3=-9810.0, createStepName='Step-Buck', 
    distributionType=UNIFORM, field='', name='Load-1')
mdb.models['BP-2'].Gravity(comp3=-9810.0, createStepName='Step-Stat', 
    distributionType=UNIFORM, field='', name='Load-2')
mdb.Job(model='BP-2', name='BP-2')
mdb.jobs['BP-2'].submit()
mdb.jobs['BP-2']._Message(JOB_COMPLETED, {'time': 'Tue Apr  8 17:14:49 2025', 
    'jobName': 'BP-2'})
