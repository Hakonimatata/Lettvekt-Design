# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-30.0, -15.0), 
    point2=(30.0, 15.0))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=150.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=150.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=150.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, ur2=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=150.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, ur2=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 15:02:14 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=150.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, ur2=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 15:06:16 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=100.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, ur2=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, ur2=FIXED)
#* TypeError: ur2; found FIXED, expecting float
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BP-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 15:23:30 2025', 
    'jobName': 'Job-2'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 15:25:44 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-29.5, -14.5), 
    point2=(29.5, 14.5))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=300, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(300, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-3.24149088755195e-05)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-3.24149088755195e-05)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 16:06:28 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=5)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#100 ]', ), ), name='CENTERLINE')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CENTERLINE'], u1=UNSET, u2=UNSET, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-3.24149088755195e-05)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-3.24149088755195e-05)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 17:55:40 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=10)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#62004 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#88440 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=(), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-3.24149088755195e-05)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-3.24149088755195e-05)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  BP-1.dat file for possible error messages if the file exists.', 
    'jobName': 'BP-1'})
mdb.jobs['BP-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  BP-1.dat file for possible error messages if the file exists.', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=10)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#4880880 #64 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#c1048008 #90 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#202200 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-3.24149088755195e-05)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-3.24149088755195e-05)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=10)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#4880880 #64 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#c1048008 #90 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-3.24149088755195e-05)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-3.24149088755195e-05)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=10)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#4880880 #64 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#c1048008 #90 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 18:25:25 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(0, 37.25), point2=(0, 
    -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=10)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#80088008 #133024 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#8800880 #c8988 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#200002 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Job(model='BP-1', name='BP-1')
mdb.jobs['BP-1'].submit()
mdb.jobs['BP-1']._Message(JOB_COMPLETED, {'time': 'Mon Mar 31 18:34:38 2025', 
    'jobName': 'BP-1'})
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-99.75, 37.25), point2=
    (-99.75, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-49.875, 37.25), 
    point2=(-49.875, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(0.0, 37.25), point2=(
    0.0, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(49.875, 37.25), point2=
    (49.875, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=20)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#80088008 #c0166404 #4103 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#8800880 #9008840 #3eb0 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#20000200 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-59.85, 37.25), point2=
    (-59.85, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-19.95, 37.25), point2=
    (-19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(19.95, 37.25), point2=(
    19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(59.85, 37.25), point2=(
    59.85, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
#* Feature creation failed.
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-49.875, 37.25), 
    point2=(-49.875, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(0.0, 37.25), point2=(
    0.0, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(49.875, 37.25), point2=
    (49.875, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=20)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#1080420 #42402042 #7990 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#44021008 #88048510 #645 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#8000 #20 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-66.5, 37.25), point2=(
    -66.5, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-33.25, 37.25), point2=
    (-33.25, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(0.0, 37.25), point2=(
    0.0, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(33.25, 37.25), point2=(
    33.25, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(66.5, 37.25), point2=(
    66.5, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=20)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#80088008 #8880404 #2ab0010 #1f3 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#8800880 #45512040 #f8002482 #c ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#200002 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-59.85, 37.25), point2=
    (-59.85, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-19.95, 37.25), point2=
    (-19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(19.95, 37.25), point2=(
    19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(59.85, 37.25), point2=(
    59.85, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=19.95, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
#* Feature creation failed.
mdb.Model(modelType=STANDARD_EXPLICIT, name='BP-1')
mdb.models['BP-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['BP-1'].sketches['__profile__'].rectangle(point1=(-99.75, -37.25), 
    point2=(99.75, 37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-59.85, 37.25), point2=
    (-59.85, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(-19.95, 37.25), point2=
    (-19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(19.95, 37.25), point2=(
    19.95, -37.25))
mdb.models['BP-1'].sketches['__profile__'].Line(point1=(59.85, 37.25), point2=(
    59.85, -37.25))
mdb.models['BP-1'].Part(dimensionality=THREE_D, name='Box', type=
    DEFORMABLE_BODY)
mdb.models['BP-1'].parts['Box'].BaseShellExtrude(depth=1800, sketch=
    mdb.models['BP-1'].sketches['__profile__'])
del mdb.models['BP-1'].sketches['__profile__']
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=1200.0, 
    principalPlane=XYPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[2], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=20.0, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[4], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].parts['Box'].DatumPlaneByPrincipalPlane(offset=-20.0, 
    principalPlane=YZPLANE)
mdb.models['BP-1'].parts['Box'].PartitionFaceByDatumPlane(datumPlane=
    mdb.models['BP-1'].parts['Box'].datums[6], faces=
    mdb.models['BP-1'].parts['Box'].faces)
mdb.models['BP-1'].Material(name='Alu')
mdb.models['BP-1'].materials['Alu'].Elastic(table=((70000.0, 0.33), ))
mdb.models['BP-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Alu', name='Section-shell', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['BP-1'].parts['Box'].Set(faces=mdb.models['BP-1'].parts['Box'].faces
    , name='faces-all')
mdb.models['BP-1'].parts['Box'].SectionAssignment(offset=0.0, offsetField='', 
    offsetType=MIDDLE_SURFACE, region=
    mdb.models['BP-1'].parts['Box'].sets['faces-all'], sectionName=
    'Section-shell', thicknessAssignment=FROM_SECTION)
mdb.models['BP-1'].parts['Box'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['BP-1'].parts['Box'].faces, technique=STRUCTURED)
mdb.models['BP-1'].parts['Box'].seedPart(deviationFactor=0.1, minSizeFactor=0.1
    , size=20)
mdb.models['BP-1'].parts['Box'].generateMesh()
mdb.models['BP-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['BP-1'].rootAssembly.Instance(dependent=ON, name='Box', part=
    mdb.models['BP-1'].parts['Box'])
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 1.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.rotate(angle=90.0, axisDirection=(1.0, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('Box', ))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.ReferencePoint(point=(1800, 0.0, 0.0))
mdb.models['BP-1'].rootAssembly.Set(name='RF1', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[4], ))
mdb.models['BP-1'].rootAssembly.Set(name='RF2', referencePoints=(
    mdb.models['BP-1'].rootAssembly.referencePoints[5], ))
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#80088008 #8804404 #f305580 ]', ), ), name='EDGES1')
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#8800880 #46122840 #cf0012 ]', ), ), name='EDGES2')
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-1', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES1']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].MultipointConstraint(controlPoint=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], csys=None, mpcType=BEAM_MPC, 
    name='Constraint-2', surface=mdb.models['BP-1'].rootAssembly.sets['EDGES2']
    , userMode=DOF_MODE_MPC, userType=0)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC1', region=
    mdb.models['BP-1'].rootAssembly.sets['RF1'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC2', region=
    mdb.models['BP-1'].rootAssembly.sets['RF2'], u1=SET, u2=SET, u3=SET, ur1=
    SET, ur2=SET, ur3=SET)
mdb.models['BP-1'].BuckleStep(maxIterations=500, name='Step-Buck', numEigen=2, 
    previous='Initial', vectors=4)
mdb.models['BP-1'].StaticStep(name='Step-Stat', previous='Step-Buck')
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC1'].setValuesInStep(stepName=
    'Step-Stat', ur2=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u1=FREED, u3=FREED)
mdb.models['BP-1'].boundaryConditions['BC2'].setValuesInStep(stepName=
    'Step-Stat', u1=FREED, u3=FREED)
mdb.models['BP-1'].rootAssembly.Set(edges=
    mdb.models['BP-1'].rootAssembly.instances['Box'].edges.getSequenceFromMask(
    mask=('[#200002 #8000 ]', ), ), name='CONTACT-POINT')
mdb.models['BP-1'].DisplacementBC(createStepName='Initial', name='BC3', region=
    mdb.models['BP-1'].rootAssembly.sets['CONTACT-POINT'], u1=UNSET, u2=UNSET, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(buckleCase=
    PERTURBATION_AND_BUCKLING, stepName='Step-Buck', u3=-1)
mdb.models['BP-1'].boundaryConditions['BC3'].setValuesInStep(stepName=
    'Step-Stat', u3=-1)
